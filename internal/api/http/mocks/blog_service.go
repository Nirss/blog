// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nirss/blog/internal/service (interfaces: BlogService)

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	post "github.com/Nirss/blog/internal/domain/post"
	gomock "github.com/golang/mock/gomock"
)

// MockBlogService is a mock of BlogService interface.
type MockBlogService struct {
	ctrl     *gomock.Controller
	recorder *MockBlogServiceMockRecorder
}

// MockBlogServiceMockRecorder is the mock recorder for MockBlogService.
type MockBlogServiceMockRecorder struct {
	mock *MockBlogService
}

// NewMockBlogService creates a new mock instance.
func NewMockBlogService(ctrl *gomock.Controller) *MockBlogService {
	mock := &MockBlogService{ctrl: ctrl}
	mock.recorder = &MockBlogServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlogService) EXPECT() *MockBlogServiceMockRecorder {
	return m.recorder
}

// CreatePost mocks base method.
func (m *MockBlogService) CreatePost(arg0 context.Context, arg1 post.Post) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePost", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePost indicates an expected call of CreatePost.
func (mr *MockBlogServiceMockRecorder) CreatePost(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePost", reflect.TypeOf((*MockBlogService)(nil).CreatePost), arg0, arg1)
}

// GetAllPosts mocks base method.
func (m *MockBlogService) GetAllPosts(arg0 context.Context) ([]post.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPosts", arg0)
	ret0, _ := ret[0].([]post.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllPosts indicates an expected call of GetAllPosts.
func (mr *MockBlogServiceMockRecorder) GetAllPosts(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPosts", reflect.TypeOf((*MockBlogService)(nil).GetAllPosts), arg0)
}
